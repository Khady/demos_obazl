## aggregators/archives/case120: two simple archives

load(
    "@rules_ocaml//build:rules.bzl",
    "ocaml_library",
    "ocaml_binary",
    "ocaml_module",
    "ocaml_test",
)

ocaml_test(
    name = "test",
    main = "_Test"
)

ocaml_module(
    name   = "_Test",
    struct = "test.ml",
    deps = [
        ":color",
        "@ounit2//:ounit2"
    ],
)

##############
ocaml_library(
    name = "color",
    manifest = [
        ":_Red",
        ":_Green",
        ":_Blue",
        ":greek"
    ],
)

ocaml_module(
    name = "_Red",
    struct = "red.ml",
)

ocaml_module(
    name = "_Green",
    struct = "green.ml",
)

ocaml_module(
    name = "_Blue",
    struct = "blue.ml",
)

##############
ocaml_library(
    name = "greek",
    manifest = [
        ":_Alpha",
        ":_Beta",
        ":_Gamma"
    ],
)

ocaml_module(
    name = "_Alpha",
    struct = "alpha.ml",
)

ocaml_module(
    name = "_Beta",
    struct = "beta.ml",
)

ocaml_module(
    name = "_Gamma",
    struct = "gamma.ml",
)
